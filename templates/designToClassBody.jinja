{% set this = designInspector.objectify_class(className) %}


#include <iostream>
#include <{{className}}.h>
#include <uaclient/uasession.h>
#include <stdexcept>
#include <{{namespace}}ArrayTools.h>
#include <{{namespace}}UaoExceptions.h>

namespace {{namespace}}
{


{{className}}::
{{className}}
(
    UaSession* session,
    UaNodeId objId
    ) :
    m_session(session),
    m_objId (objId)
    {
    
    }	



{% for cv in designInspector.objectify_cache_variables(className) %}
	{{readPronouncement(className, cv.get('name'), cv.get('dataType'))}}
	{% if cv.get('addressSpaceWrite') != 'forbidden' %}

		{{writePronouncement(className, cv.get('name'), cv.get('dataType'))}}
	{% endif %}
{% endfor %}
{% for sv in this.sourcevariable %}
	{% if sv.get('addressSpaceRead') != 'forbidden' %}
		{{readPronouncement(className, sv.get('name'), sv.get('dataType'))}}
	{% endif %}
	{% if sv.get('addressSpaceWrite') != 'forbidden' %}
		{{writePronouncement(className, sv.get('name'), sv.get('dataType'))}}
	{% endif %}
{% endfor %}


}



